###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         12/May/2015  19:18:27 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor         #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\Sou #
#                          rce\CoordinatorAF.c                                #
#    Command line       =  -f "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor     #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg"        #
#                          (-DCPU32MHZ -DROOT=__near_func                     #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor     #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"       #
#                          (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0      #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x02000000          #
#                          -DZDAPP_CONFIG_PAN_ID=0x0030                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "C:\Users\William\Desktop\± #
#                          œ“µ…Ëº∆\SRC\coor ±∏∑›\ARM\Coor for ARM             #
#                          3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝æ›£©\Projects\zstack\M #
#                          yCoordinator\Coordinator\Source\CoordinatorAF.c"   #
#                          -D ZTOOL_P1 -D NV_RESTORE=1 -lC                    #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor        #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\CoordinatorEB\List\" -lA                     #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor        #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\CoordinatorEB\List\" --diag_suppress         #
#                          Pe001,Pa010 -o "C:\Users\William\Desktop\±œ“µ…Ëº∆\ #
#                          SRC\coor ±∏∑›\ARM\Coor for ARM                     #
#                          3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝æ›£©\Projects\zstack\M #
#                          yCoordinator\Coordinator\CC2530DB\CoordinatorEB\Ob #
#                          j\" -e --no_code_motion --debug --core=plain       #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "C:\Users\William\Desktop\ #
#                          ±œ“µ…Ëº∆\SRC\coor ±∏∑›\ARM\Coor for ARM            #
#                          3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝æ›£©\Projects\zstack\M #
#                          yCoordinator\Coordinator\CC2530DB\" -I             #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor        #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\..\Source\" -I "C:\Users\William\Desktop\±œ“ #
#                          µ…Ëº∆\SRC\coor ±∏∑›\ARM\Coor for ARM               #
#                          3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝æ›£©\Projects\zstack\M #
#                          yCoordinator\Coordinator\CC2530DB\..\..\..\ZMain\T #
#                          I2530DB\" -I "C:\Users\William\Desktop\±œ“µ…Ëº∆\SR #
#                          C\coor ±∏∑›\ARM\Coor for ARM                       #
#                          3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝æ›£©\Projects\zstack\M #
#                          yCoordinator\Coordinator\CC2530DB\..\..\..\..\..\C #
#                          omponents\hal\include\" -I                         #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor        #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\..\..\..\..\..\Components\hal\target\CC2530E #
#                          B\" -I "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor #
#                           ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ  #
#                          ˝æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC #
#                          2530DB\..\..\..\..\..\Components\mac\include\" -I  #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor        #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\..\..\..\..\..\Components\mac\high_level\"   #
#                          -I "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor     #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\..\..\..\..\..\Components\mac\low_level\srf0 #
#                          4\" -I "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor #
#                           ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ  #
#                          ˝æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC #
#                          2530DB\..\..\..\..\..\Components\mac\low_level\srf #
#                          04\single_chip\" -I "C:\Users\William\Desktop\±œ“µ #
#                          …Ëº∆\SRC\coor ±∏∑›\ARM\Coor for ARM                #
#                          3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝æ›£©\Projects\zstack\M #
#                          yCoordinator\Coordinator\CC2530DB\..\..\..\..\..\C #
#                          omponents\mt\" -I "C:\Users\William\Desktop\±œ“µ…Ë #
#                          º∆\SRC\coor ±∏∑›\ARM\Coor for ARM                  #
#                          3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝æ›£©\Projects\zstack\M #
#                          yCoordinator\Coordinator\CC2530DB\..\..\..\..\..\C #
#                          omponents\osal\include\" -I                        #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor        #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\..\..\..\..\..\Components\services\saddr\"   #
#                          -I "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor     #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\..\..\..\..\..\Components\services\sdata\"   #
#                          -I "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor     #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\..\..\..\..\..\Components\stack\af\" -I      #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor        #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\..\..\..\..\..\Components\stack\nwk\" -I     #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor        #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\..\..\..\..\..\Components\stack\sapi\" -I    #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor        #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\..\..\..\..\..\Components\stack\sec\" -I     #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor        #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\..\..\..\..\..\Components\stack\sys\" -I     #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor        #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\..\..\..\..\..\Components\stack\zdo\" -I     #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor        #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\..\..\..\..\..\Components\zmac\" -I          #
#                          "C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor        #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\..\..\..\..\..\Components\zmac\f8w\" -Ohz    #
#                          --require_prototypes                               #
#    List file          =  C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor         #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\CoordinatorEB\List\CoordinatorAF.lst         #
#    Object file        =  C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor         #
#                          ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝ #
#                          æ›£©\Projects\zstack\MyCoordinator\Coordinator\CC2 #
#                          530DB\CoordinatorEB\Obj\CoordinatorAF.r51          #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\William\Desktop\±œ“µ…Ëº∆\SRC\coor ±∏∑›\ARM\Coor for ARM 3.1(ÃÌº”÷∏¡Ó…œ¥´À˘”–≥ı ºªØ ˝æ›£©\Projects\zstack\MyCoordinator\Coordinator\Source\CoordinatorAF.c
      1          #include "CoordinatorVariable.h"
      2          #include "CoordinatorAF.h"
      3          
      4          
      5           void CoordinatorApp_HandleAfIncomingMessage( afIncomingMSGPacket_t *pckt );//¥¶¿Ì∆‰À˚…Ë±∏∑¢ÀÕπ˝¿¥µƒ ˝æ›
      6           void CoordinatorApp_SendBroadcastMessage(uint16 ClusterID,uint16 len,uint8 * str);//”√π„≤•µƒ∑Ω Ω∑¢ÀÕ ˝æ›
      7           void CoordinatorApp_SendGroupMessage(uint16 ClusterID,uint16 len,uint8 * str);//”√◊È≤•µƒ∑Ω Ω∑¢ÀÕ ˝æ›
      8           void CoordinatorApp_SendP2PMessage(uint16 ClusterID,uint16 len,uint8 * str);//”√µ„∂‘µ„µƒ∑Ω Ω∑¢ÀÕ ˝æ›
      9           void CoordinatorWriteUART(uint8 * str, uint8 len);// add SOP and  FCS to the str and send the data to the arm
     10          
     11           
     12           /*********************************************************************
     13           * @fn      CoordinatorApp_HandleAfIncomingMessage
     14           *
     15           * @brief   Data message processor callback.  This function processes
     16           *          any incoming data - probably from other devices.  So, based
     17           *          on cluster ID, perform the intended action.
     18           *
     19           * @param   none
     20           *
     21           * @return  none
     22           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     23          void CoordinatorApp_HandleAfIncomingMessage( afIncomingMSGPacket_t *pkt )
   \                     CoordinatorApp_HandleAfIncomingMessage:
     24          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
     25            uint8 MsgLength = pkt->cmd.DataLength;
   \   000005   EA           MOV     A,R2
   \   000006   2420         ADD     A,#0x20
   \   000008   F582         MOV     DPL,A
   \   00000A   EB           MOV     A,R3
   \   00000B   3400         ADDC    A,#0x0
   \   00000D   F583         MOV     DPH,A
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   FE           MOV     R6,A
     26            uint8 *str = pkt->cmd.Data;
   \   000011   EA           MOV     A,R2
   \   000012   2422         ADD     A,#0x22
   \   000014   F582         MOV     DPL,A
   \   000016   EB           MOV     A,R3
   \   000017   3400         ADDC    A,#0x0
   \   000019   F583         MOV     DPH,A
   \   00001B   12....       LCALL   ?Subroutine6 & 0xFFFF
     27            uint8 len = str[0];
   \                     ??CrossCallReturnLabel_12:
   \   00001E   85..82       MOV     DPL,?V0 + 0
   \   000021   F583         MOV     DPH,A
   \   000023   E0           MOVX    A,@DPTR
   \   000024   F5..         MOV     ?V0 + 4,A
     28            uint8 id  = str[1];
   \   000026   A3           INC     DPTR
   \   000027   E0           MOVX    A,@DPTR
   \   000028   F5..         MOV     ?V0 + 6,A
     29            uint8 command = str[2];
   \   00002A   85..82       MOV     DPL,?V0 + 0
   \   00002D   85..83       MOV     DPH,?V0 + 1
   \   000030   A3           INC     DPTR
   \   000031   A3           INC     DPTR
   \   000032   E0           MOVX    A,@DPTR
   \   000033   FF           MOV     R7,A
     30            uint16 deviceAddr = pkt->srcAddr.addr.shortAddr;
   \   000034   8A82         MOV     DPL,R2
   \   000036   8B83         MOV     DPH,R3
   \   000038   A3           INC     DPTR
   \   000039   A3           INC     DPTR
   \   00003A   A3           INC     DPTR
   \   00003B   A3           INC     DPTR
   \   00003C   A3           INC     DPTR
   \   00003D   A3           INC     DPTR
   \   00003E   E0           MOVX    A,@DPTR
   \   00003F   FC           MOV     R4,A
   \   000040   A3           INC     DPTR
   \   000041   E0           MOVX    A,@DPTR
   \   000042   FD           MOV     R5,A
     31            
     32            if(command == CMD_GET_RSSI)
   \   000043   740F         MOV     A,#0xf
   \   000045   6F           XRL     A,R7
   \   000046   7027         JNZ     ??CoordinatorApp_HandleAfIncomingMessage_0
     33            {
     34              if(len == 0)
   \   000048   E5..         MOV     A,?V0 + 4
   \   00004A   6003         JZ      $+5
   \   00004C   02....       LJMP    ??CoordinatorApp_HandleAfIncomingMessage_1 & 0xFFFF
     35              {
     36                  CoordinatorApp_P2PDstAddr.addr.shortAddr = deviceAddr;
   \   00004F   90....       MOV     DPTR,#CoordinatorApp_P2PDstAddr
   \   000052   EC           MOV     A,R4
   \   000053   F0           MOVX    @DPTR,A
   \   000054   A3           INC     DPTR
   \   000055   ED           MOV     A,R5
   \   000056   F0           MOVX    @DPTR,A
     37                  CoordinatorApp_SendP2PMessage(COORDINATOR_COMMAND_CLUSTERID,3,str);
   \   000057                ; Setup parameters for call to function CoordinatorApp_SendP2PMessage
   \   000057   78..         MOV     R0,#?V0 + 0
   \   000059   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005C   7C03         MOV     R4,#0x3
   \   00005E   7D00         MOV     R5,#0x0
   \   000060   7A02         MOV     R2,#0x2
   \   000062   7B00         MOV     R3,#0x0
   \   000064   12....       LCALL   ??CoordinatorApp_SendP2PMessage?relay
   \   000067   7402         MOV     A,#0x2
   \   000069   12....       LCALL   ?DEALLOC_XSTACK8
   \   00006C   02....       LJMP    ??CoordinatorApp_HandleAfIncomingMessage_1 & 0xFFFF
     38              }
     39              return;
     40            }// this message is send to the devices to tell it the RSSI regardless of the AddrList 
     41            
     42            if((id <= DEVICEID_MAX)) // the id is in the range
   \                     ??CoordinatorApp_HandleAfIncomingMessage_0:
   \   00006F   E5..         MOV     A,?V0 + 6
   \   000071   C3           CLR     C
   \   000072   9465         SUBB    A,#0x65
   \   000074   4003         JC      $+5
   \   000076   02....       LJMP    ??CoordinatorApp_HandleAfIncomingMessage_1 & 0xFFFF
     43            {
     44                if( (AddrList[id].addr == deviceAddr)  || (AddrList[id].status == FALSE))
   \   000079   85....       MOV     ?V0 + 2,?V0 + 6
   \   00007C   75..00       MOV     ?V0 + 3,#0x0
   \   00007F   7402         MOV     A,#0x2
   \   000081   78..         MOV     R0,#?V0 + 2
   \   000083   12....       LCALL   ?S_SHL
   \   000086   74..         MOV     A,#AddrList & 0xff
   \   000088   25..         ADD     A,?V0 + 2
   \   00008A   F582         MOV     DPL,A
   \   00008C   74..         MOV     A,#(AddrList >> 8) & 0xff
   \   00008E   35..         ADDC    A,?V0 + 3
   \   000090   F583         MOV     DPH,A
   \   000092   E0           MOVX    A,@DPTR
   \   000093   6C           XRL     A,R4
   \   000094   7003         JNZ     ??CoordinatorApp_HandleAfIncomingMessage_2
   \   000096   A3           INC     DPTR
   \   000097   E0           MOVX    A,@DPTR
   \   000098   6D           XRL     A,R5
   \                     ??CoordinatorApp_HandleAfIncomingMessage_2:
   \   000099   85....       MOV     ?V0 + 2,?V0 + 6
   \   00009C   75..00       MOV     ?V0 + 3,#0x0
   \   00009F   6011         JZ      ??CoordinatorApp_HandleAfIncomingMessage_3
   \   0000A1   7402         MOV     A,#0x2
   \   0000A3   78..         MOV     R0,#?V0 + 2
   \   0000A5   12....       LCALL   ?S_SHL
   \   0000A8   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   0000AB   6003         JZ      $+5
   \   0000AD   02....       LJMP    ??CoordinatorApp_HandleAfIncomingMessage_1 & 0xFFFF
   \   0000B0   800C         SJMP    ??CoordinatorApp_HandleAfIncomingMessage_4
     45                {
     46                  if(AddrList[id].status == FALSE) // the deveice of the address is not alive
   \                     ??CoordinatorApp_HandleAfIncomingMessage_3:
   \   0000B2   7402         MOV     A,#0x2
   \   0000B4   78..         MOV     R0,#?V0 + 2
   \   0000B6   12....       LCALL   ?S_SHL
   \   0000B9   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   0000BC   7027         JNZ     ??CoordinatorApp_HandleAfIncomingMessage_5
     47                  {
     48                     AddrList[id].addr = deviceAddr; 
   \                     ??CoordinatorApp_HandleAfIncomingMessage_4:
   \   0000BE   85....       MOV     ?V0 + 2,?V0 + 6
   \   0000C1   75..00       MOV     ?V0 + 3,#0x0
   \   0000C4   7402         MOV     A,#0x2
   \   0000C6   78..         MOV     R0,#?V0 + 2
   \   0000C8   12....       LCALL   ?S_SHL
   \   0000CB   74..         MOV     A,#AddrList & 0xff
   \   0000CD   25..         ADD     A,?V0 + 2
   \   0000CF   F8           MOV     R0,A
   \   0000D0   74..         MOV     A,#(AddrList >> 8) & 0xff
   \   0000D2   35..         ADDC    A,?V0 + 3
   \   0000D4   F9           MOV     R1,A
   \   0000D5   8882         MOV     DPL,R0
   \   0000D7   8983         MOV     DPH,R1
   \   0000D9   EC           MOV     A,R4
   \   0000DA   F0           MOVX    @DPTR,A
   \   0000DB   A3           INC     DPTR
   \   0000DC   ED           MOV     A,R5
   \   0000DD   12....       LCALL   ?Subroutine5 & 0xFFFF
     49                     AddrList[id].status = TRUE;
     50                  }
   \                     ??CrossCallReturnLabel_8:
   \   0000E0   A3           INC     DPTR
   \   0000E1   A3           INC     DPTR
   \   0000E2   7401         MOV     A,#0x1
   \   0000E4   F0           MOVX    @DPTR,A
     51                  AddrList[id].tick_alive = 100; // reload the tick value
   \                     ??CoordinatorApp_HandleAfIncomingMessage_5:
   \   0000E5   85....       MOV     ?V0 + 2,?V0 + 6
   \   0000E8   75..00       MOV     ?V0 + 3,#0x0
   \   0000EB   7402         MOV     A,#0x2
   \   0000ED   78..         MOV     R0,#?V0 + 2
   \   0000EF   12....       LCALL   ?S_SHL
   \   0000F2   74..         MOV     A,#(AddrList + 3) & 0xff
   \   0000F4   25..         ADD     A,?V0 + 2
   \   0000F6   F582         MOV     DPL,A
   \   0000F8   74..         MOV     A,#((AddrList + 3) >> 8) & 0xff
   \   0000FA   35..         ADDC    A,?V0 + 3
   \   0000FC   F583         MOV     DPH,A
   \   0000FE   7464         MOV     A,#0x64
   \   000100   F0           MOVX    @DPTR,A
     52                  
     53                  switch ( pkt->clusterId )
   \   000101   8A82         MOV     DPL,R2
   \   000103   8B83         MOV     DPH,R3
   \   000105   A3           INC     DPTR
   \   000106   A3           INC     DPTR
   \   000107   A3           INC     DPTR
   \   000108   A3           INC     DPTR
   \   000109   E0           MOVX    A,@DPTR
   \   00010A   6401         XRL     A,#0x1
   \   00010C   7002         JNZ     ??CoordinatorApp_HandleAfIncomingMessage_6
   \   00010E   A3           INC     DPTR
   \   00010F   E0           MOVX    A,@DPTR
   \                     ??CoordinatorApp_HandleAfIncomingMessage_6:
   \   000110   7077         JNZ     ??CoordinatorApp_HandleAfIncomingMessage_1
     54                  {
     55                    case ENDDEVICE_DATA_CLUSTERID:
     56                      switch (command)
   \   000112   740A         MOV     A,#0xa
   \   000114   6F           XRL     A,R7
   \   000115   7056         JNZ     ??CoordinatorApp_HandleAfIncomingMessage_7
     57                      {
     58                        case CMD_SET_DEVICEID:
     59                          if(len == 1)
   \   000117   7401         MOV     A,#0x1
   \   000119   65..         XRL     A,?V0 + 4
   \   00011B   706C         JNZ     ??CoordinatorApp_HandleAfIncomingMessage_1
     60                          {
     61                             if(str[3] <= DEVICEID_MAX)
   \   00011D   85..82       MOV     DPL,?V0 + 0
   \   000120   85..83       MOV     DPH,?V0 + 1
   \   000123   A3           INC     DPTR
   \   000124   A3           INC     DPTR
   \   000125   A3           INC     DPTR
   \   000126   E0           MOVX    A,@DPTR
   \   000127   C3           CLR     C
   \   000128   9465         SUBB    A,#0x65
   \   00012A   505D         JNC     ??CoordinatorApp_HandleAfIncomingMessage_1
     62                             {
     63                                 AddrList[id].status = FALSE;//the old address is die
   \   00012C   75..00       MOV     ?V0 + 7,#0x0
   \   00012F   7402         MOV     A,#0x2
   \   000131   78..         MOV     R0,#?V0 + 6
   \   000133   12....       LCALL   ?S_SHL
   \   000136   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   000139   E4           CLR     A
   \   00013A   12....       LCALL   ?Subroutine4 & 0xFFFF
     64                                 AddrList[id].tick_alive = 0;
   \                     ??CrossCallReturnLabel_6:
   \   00013D   12....       LCALL   ?Subroutine5 & 0xFFFF
     65                                 AddrList[id].addr = 0x0000;
   \                     ??CrossCallReturnLabel_9:
   \   000140   F0           MOVX    @DPTR,A
   \   000141   A3           INC     DPTR
   \   000142   F0           MOVX    @DPTR,A
     66                                 id = str[3];
   \   000143   85..82       MOV     DPL,?V0 + 0
   \   000146   85..83       MOV     DPH,?V0 + 1
   \   000149   A3           INC     DPTR
   \   00014A   A3           INC     DPTR
   \   00014B   A3           INC     DPTR
   \   00014C   E0           MOVX    A,@DPTR
   \   00014D   F5..         MOV     ?V0 + 6,A
     67                                 AddrList[id].status = TRUE;//the new address is alive
   \   00014F   75..00       MOV     ?V0 + 7,#0x0
   \   000152   7402         MOV     A,#0x2
   \   000154   78..         MOV     R0,#?V0 + 6
   \   000156   12....       LCALL   ?S_SHL
   \   000159   12....       LCALL   ?Subroutine1 & 0xFFFF
     68                                 AddrList[id].tick_alive = 100;
     69                                 AddrList[id].addr = deviceAddr;
     70                             }
     71                             
     72                           // HalUARTWrite(0,(uint8 *)(&deviceAddr),2);
     73                          }
   \                     ??CrossCallReturnLabel_1:
   \   00015C   7401         MOV     A,#0x1
   \   00015E   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   000161   7464         MOV     A,#0x64
   \   000163   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_10:
   \   000166   EC           MOV     A,R4
   \   000167   F0           MOVX    @DPTR,A
   \   000168   A3           INC     DPTR
   \   000169   ED           MOV     A,R5
   \   00016A   F0           MOVX    @DPTR,A
   \   00016B   801C         SJMP    ??CoordinatorApp_HandleAfIncomingMessage_1
     74                          break;
     75                      default:
     76                        if(MsgLength == (len + 3)) // the data from the enddevice will be send to the arm
   \                     ??CoordinatorApp_HandleAfIncomingMessage_7:
   \   00016D   8E..         MOV     ?V0 + 2,R6
   \   00016F   E5..         MOV     A,?V0 + 4
   \   000171   2403         ADD     A,#0x3
   \   000173   F8           MOV     R0,A
   \   000174   E4           CLR     A
   \   000175   3400         ADDC    A,#0x0
   \   000177   F9           MOV     R1,A
   \   000178   E8           MOV     A,R0
   \   000179   65..         XRL     A,?V0 + 2
   \   00017B   7001         JNZ     ??CoordinatorApp_HandleAfIncomingMessage_8
   \   00017D   E9           MOV     A,R1
   \                     ??CoordinatorApp_HandleAfIncomingMessage_8:
   \   00017E   7009         JNZ     ??CoordinatorApp_HandleAfIncomingMessage_1
     77                        {
     78                           CoordinatorWriteUART(str,MsgLength);
   \   000180                ; Setup parameters for call to function CoordinatorWriteUART
   \   000180   EE           MOV     A,R6
   \   000181   F9           MOV     R1,A
   \   000182   AA..         MOV     R2,?V0 + 0
   \   000184   AB..         MOV     R3,?V0 + 1
   \   000186   12....       LCALL   ??CoordinatorWriteUART?relay
   \                     ??CoordinatorApp_HandleAfIncomingMessage_1:
   \   000189   7F08         MOV     R7,#0x8
   \   00018B   02....       LJMP    ?BANKED_LEAVE_XDATA
     79                        }
     80                        break;
     81                      }
     82                      break; 
     83                  }
     84                }
     85                else
     86                {
     87                    // the device doesn't exit in the list
     88                }
     89            }
     90            else;
     91          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   8882         MOV     DPL,R0
   \   000003   8983         MOV     DPH,R1
   \   000005   A3           INC     DPTR
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   74..         MOV     A,#(AddrList + 2) & 0xff
   \   000002   25..         ADD     A,?V0 + 2
   \   000004   F582         MOV     DPL,A
   \   000006   74..         MOV     A,#((AddrList + 2) >> 8) & 0xff
   \   000008   35..         ADDC    A,?V0 + 3
   \   00000A   F583         MOV     DPH,A
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   74..         MOV     A,#AddrList & 0xff
   \   000002   25..         ADD     A,?V0 + 6
   \   000004   F8           MOV     R0,A
   \   000005   74..         MOV     A,#(AddrList >> 8) & 0xff
   \   000007   35..         ADDC    A,?V0 + 7
   \   000009   F9           MOV     R1,A
   \   00000A   8882         MOV     DPL,R0
   \   00000C   8983         MOV     DPH,R1
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F5..         MOV     ?V0 + 0,A
   \   000003   A3           INC     DPTR
   \   000004   E0           MOVX    A,@DPTR
   \   000005   F5..         MOV     ?V0 + 1,A
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   8882         MOV     DPL,R0
   \   000003   8983         MOV     DPH,R1
   \   000005   22           RET
     92          
     93          /*********************************************************************
     94           * @fn      CoordinatorApp_SendBroadcastMessage
     95           *
     96           * @brief   Send the Broadcast message.
     97           *
     98          * @param   ClusterID,the clusterID of the message,
     99                     len,the length of the message,
    100                     str,the pointer of the message.
    101           *
    102           * @return  none
    103           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    104          void CoordinatorApp_SendBroadcastMessage(uint16 ClusterID,uint16 len,uint8 * str)
   \                     CoordinatorApp_SendBroadcastMessage:
    105          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   740C         MOV     A,#0xc
   \   000007   12....       LCALL   ?XSTACK_DISP0_8
   \   00000A   12....       LCALL   ?Subroutine2 & 0xFFFF
    106           
    107                if ( AF_DataRequest( &CoordinatorApp_Broadcast_DstAddr, &CoordinatorApp_epDesc,
    108                                     ClusterID,
    109                                     len,
    110                                     str,//(uint8*)&CoordinatorAppPeriodicCounter,
    111                                     &CoordinatorApp_TransID,
    112                                     AF_DISCV_ROUTE,
    113                                     AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \                     ??CrossCallReturnLabel_2:
   \   00000D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000010   75....       MOV     ?V0 + 2,#CoordinatorApp_TransID & 0xff
   \   000013   75....       MOV     ?V0 + 3,#(CoordinatorApp_TransID >> 8) & 0xff
   \   000016   78..         MOV     R0,#?V0 + 2
   \   000018   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00001B   78..         MOV     R0,#?V0 + 0
   \   00001D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000020   8C..         MOV     ?V0 + 0,R4
   \   000022   8D..         MOV     ?V0 + 1,R5
   \   000024   78..         MOV     R0,#?V0 + 0
   \   000026   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000029   8A..         MOV     ?V0 + 0,R2
   \   00002B   8B..         MOV     ?V0 + 1,R3
   \   00002D   78..         MOV     R0,#?V0 + 0
   \   00002F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000032   7920         MOV     R1,#0x20
   \   000034   7C..         MOV     R4,#CoordinatorApp_epDesc & 0xff
   \   000036   7D..         MOV     R5,#(CoordinatorApp_epDesc >> 8) & 0xff
   \   000038   7A..         MOV     R2,#CoordinatorApp_Broadcast_DstAddr & 0xff
   \   00003A   7B..         MOV     R3,#(CoordinatorApp_Broadcast_DstAddr >> 8) & 0xff
   \   00003C                REQUIRE ?Subroutine0
   \   00003C                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   12....       LCALL   ??AF_DataRequest?relay
   \   000003   7409         MOV     A,#0x9
   \   000005   12....       LCALL   ?DEALLOC_XSTACK8
    114                {
    115                }
    116                else
    117                {
    118                  // Error occurred in request to send.
    119                }
    120          }
   \   000008                REQUIRE ??Subroutine7_0
   \   000008                ; // Fall through to label ??Subroutine7_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine7_0:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_14:
   \   000003                ; Setup parameters for call to function AF_DataRequest
   \   000003                ; Setup parameters for call to function AF_DataRequest
   \   000003   75..1E       MOV     ?V0 + 2,#0x1e
   \   000006   78..         MOV     R0,#?V0 + 2
   \   000008   22           RET
    121          
    122          
    123          
    124          /*********************************************************************
    125           * @fn      CoordinatorApp_SendGroupMessage
    126           *
    127           * @brief   Send the Group message .
    128           *
    129           * @param   ClusterID,the clusterID of the message,
    130                      len,the length of the message,
    131                      str,the pointer of the message.
    132           *
    133           * @return  none
    134           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    135          void CoordinatorApp_SendGroupMessage(uint16 ClusterID,uint16 len,uint8 * str)
   \                     CoordinatorApp_SendGroupMessage:
    136          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   740C         MOV     A,#0xc
   \   000007   12....       LCALL   ?XSTACK_DISP0_8
   \   00000A   12....       LCALL   ?Subroutine2 & 0xFFFF
    137            if ( AF_DataRequest( &CoordinatorApp_Group_DstAddr, &CoordinatorApp_epDesc,
    138                                 ClusterID,
    139                                 len,
    140                                 str,
    141                                 &CoordinatorApp_TransID,
    142                                 AF_DISCV_ROUTE,
    143                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \                     ??CrossCallReturnLabel_3:
   \   00000D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000010   75....       MOV     ?V0 + 2,#CoordinatorApp_TransID & 0xff
   \   000013   75....       MOV     ?V0 + 3,#(CoordinatorApp_TransID >> 8) & 0xff
   \   000016   78..         MOV     R0,#?V0 + 2
   \   000018   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00001B   78..         MOV     R0,#?V0 + 0
   \   00001D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000020   8C..         MOV     ?V0 + 0,R4
   \   000022   8D..         MOV     ?V0 + 1,R5
   \   000024   78..         MOV     R0,#?V0 + 0
   \   000026   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000029   8A..         MOV     ?V0 + 0,R2
   \   00002B   8B..         MOV     ?V0 + 1,R3
   \   00002D   78..         MOV     R0,#?V0 + 0
   \   00002F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000032   7920         MOV     R1,#0x20
   \   000034   7C..         MOV     R4,#CoordinatorApp_epDesc & 0xff
   \   000036   7D..         MOV     R5,#(CoordinatorApp_epDesc >> 8) & 0xff
   \   000038   7A..         MOV     R2,#CoordinatorApp_Group_DstAddr & 0xff
   \   00003A   7B..         MOV     R3,#(CoordinatorApp_Group_DstAddr >> 8) & 0xff
   \   00003C   80..         SJMP    ?Subroutine0
    144            {
    145            }
    146            else
    147            {
    148              // Error occurred in request to send.
    149            }
    150          }
    151          
    152          
    153          
    154          /*********************************************************************
    155           * @fn      CoordinatorApp_SendP2PMessage
    156           *
    157           * @brief   Send the PointToPoint message.
    158           *
    159           * @param   ClusterID,the clusterID of the message,
    160                      len,the length of the message,
    161                      str,the pointer of the message.
    162           *
    163           * @return  none
    164           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    165          void CoordinatorApp_SendP2PMessage(uint16 ClusterID,uint16 len,uint8 * str)
   \                     CoordinatorApp_SendP2PMessage:
    166          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   740C         MOV     A,#0xc
   \   000007   12....       LCALL   ?XSTACK_DISP0_8
   \   00000A   12....       LCALL   ?Subroutine6 & 0xFFFF
    167            if(CoordinatorApp_P2PDstAddr.addr.shortAddr)// ensure that do not send message to self
   \                     ??CrossCallReturnLabel_13:
   \   00000D   90....       MOV     DPTR,#CoordinatorApp_P2PDstAddr
   \   000010   E0           MOVX    A,@DPTR
   \   000011   F8           MOV     R0,A
   \   000012   A3           INC     DPTR
   \   000013   E0           MOVX    A,@DPTR
   \   000014   F9           MOV     R1,A
   \   000015   E8           MOV     A,R0
   \   000016   49           ORL     A,R1
   \   000017   603C         JZ      ??CoordinatorApp_SendP2PMessage_0
    168            {
    169                if(AF_DataRequest(&CoordinatorApp_P2PDstAddr,&CoordinatorApp_epDesc,
    170                                  ClusterID,
    171                                  len,
    172                                  str,
    173                                  &CoordinatorApp_TransID,
    174                                  AF_DISCV_ROUTE,
    175                                  AF_DEFAULT_RADIUS ) == afStatus_SUCCESS)
   \   000019                ; Setup parameters for call to function AF_DataRequest
   \   000019   75..1E       MOV     ?V0 + 2,#0x1e
   \   00001C   78..         MOV     R0,#?V0 + 2
   \   00001E   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000021   75....       MOV     ?V0 + 2,#CoordinatorApp_TransID & 0xff
   \   000024   75....       MOV     ?V0 + 3,#(CoordinatorApp_TransID >> 8) & 0xff
   \   000027   78..         MOV     R0,#?V0 + 2
   \   000029   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00002C   78..         MOV     R0,#?V0 + 0
   \   00002E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000031   8C..         MOV     ?V0 + 0,R4
   \   000033   8D..         MOV     ?V0 + 1,R5
   \   000035   78..         MOV     R0,#?V0 + 0
   \   000037   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00003A   8A..         MOV     ?V0 + 0,R2
   \   00003C   8B..         MOV     ?V0 + 1,R3
   \   00003E   78..         MOV     R0,#?V0 + 0
   \   000040   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000043   7920         MOV     R1,#0x20
   \   000045   7C..         MOV     R4,#CoordinatorApp_epDesc & 0xff
   \   000047   7D..         MOV     R5,#(CoordinatorApp_epDesc >> 8) & 0xff
   \   000049   7A..         MOV     R2,#CoordinatorApp_P2PDstAddr & 0xff
   \   00004B   7B..         MOV     R3,#(CoordinatorApp_P2PDstAddr >> 8) & 0xff
   \   00004D   12....       LCALL   ??AF_DataRequest?relay
   \   000050   7409         MOV     A,#0x9
   \   000052   12....       LCALL   ?DEALLOC_XSTACK8
    176                {
    177                 // HalUARTWrite(0,str,4);
    178                }
    179                else
    180                {
    181                  
    182                  
    183                } 
    184            }
    185            else;
    186          }
   \                     ??CoordinatorApp_SendP2PMessage_0:
   \   000055   02....       LJMP    ??Subroutine7_0 & 0xFFFF
    187          
    188          /*********************************************************************
    189           * @fn      CoordinatorWriteUART
    190           *
    191           * @brief   add SOP and  FCS to the str and send the data to the arm
    192           *
    193           * @param   str - the data to send
    194           *
    195           *          len - the lengh of the str
    196           *
    197           * @return  none
    198           ********************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    199          void CoordinatorWriteUART(uint8 * str, uint8 len)
   \                     CoordinatorWriteUART:
    200          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    201            uint8 i = 0;
    202            FCS = 0x00;
   \   000007   90....       MOV     DPTR,#FCS
   \   00000A   E4           CLR     A
   \   00000B   F0           MOVX    @DPTR,A
    203            for(i = 0; i < len; i++)
   \   00000C   F5..         MOV     ?V0 + 0,A
   \   00000E   802D         SJMP    ??CoordinatorWriteUART_0
    204            {
    205                Serial_Data[i + 1] = str[i];
   \                     ??CoordinatorWriteUART_1:
   \   000010   85..82       MOV     DPL,?V0 + 0
   \   000013   AC82         MOV     R4,DPL
   \   000015   EA           MOV     A,R2
   \   000016   2C           ADD     A,R4
   \   000017   F8           MOV     R0,A
   \   000018   EB           MOV     A,R3
   \   000019   3400         ADDC    A,#0x0
   \   00001B   F9           MOV     R1,A
   \   00001C   8882         MOV     DPL,R0
   \   00001E   8983         MOV     DPH,R1
   \   000020   E0           MOVX    A,@DPTR
   \   000021   C0E0         PUSH    A
   \   000023   74..         MOV     A,#(Serial_Data + 1) & 0xff
   \   000025   2C           ADD     A,R4
   \   000026   F582         MOV     DPL,A
   \   000028   74..         MOV     A,#((Serial_Data + 1) >> 8) & 0xff
   \   00002A   3400         ADDC    A,#0x0
   \   00002C   F583         MOV     DPH,A
   \   00002E   D0E0         POP     A
   \   000030   12....       LCALL   ?Subroutine5 & 0xFFFF
    206                FCS ^= str[i];
    207            }
   \                     ??CrossCallReturnLabel_11:
   \   000033   E0           MOVX    A,@DPTR
   \   000034   F8           MOV     R0,A
   \   000035   90....       MOV     DPTR,#FCS
   \   000038   E0           MOVX    A,@DPTR
   \   000039   68           XRL     A,R0
   \   00003A   F0           MOVX    @DPTR,A
   \   00003B   05..         INC     ?V0 + 0
   \                     ??CoordinatorWriteUART_0:
   \   00003D   E5..         MOV     A,?V0 + 0
   \   00003F   C3           CLR     C
   \   000040   9E           SUBB    A,R6
   \   000041   40CD         JC      ??CoordinatorWriteUART_1
    208            Serial_Data[i + 1] = FCS; 
   \   000043   E0           MOVX    A,@DPTR
   \   000044   C0E0         PUSH    A
   \   000046   74..         MOV     A,#(Serial_Data + 1) & 0xff
   \   000048   25..         ADD     A,?V0 + 0
   \   00004A   F582         MOV     DPL,A
   \   00004C   74..         MOV     A,#((Serial_Data + 1) >> 8) & 0xff
   \   00004E   3400         ADDC    A,#0x0
   \   000050   F583         MOV     DPH,A
   \   000052   D0E0         POP     A
   \   000054   F0           MOVX    @DPTR,A
    209            HalUARTWrite(0,Serial_Data,len + 2); 
   \   000055                ; Setup parameters for call to function HalUARTWrite
   \   000055   EE           MOV     A,R6
   \   000056   2402         ADD     A,#0x2
   \   000058   FC           MOV     R4,A
   \   000059   E4           CLR     A
   \   00005A   3400         ADDC    A,#0x0
   \   00005C   FD           MOV     R5,A
   \   00005D   7A..         MOV     R2,#Serial_Data & 0xff
   \   00005F   7B..         MOV     R3,#(Serial_Data >> 8) & 0xff
   \   000061   7900         MOV     R1,#0x0
   \   000063   12....       LCALL   ??HalUARTWrite?relay
    210          }
   \   000066   7F02         MOV     R7,#0x2
   \   000068   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??CoordinatorApp_HandleAfIncomingMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    CoordinatorApp_HandleAfIncomingMessage

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??CoordinatorApp_SendBroadcastMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    CoordinatorApp_SendBroadcastMessage

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??CoordinatorApp_SendGroupMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    CoordinatorApp_SendGroupMessage

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??CoordinatorApp_SendP2PMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    CoordinatorApp_SendP2PMessage

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??CoordinatorWriteUART?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    CoordinatorWriteUART

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     CoordinatorApp_HandleAfIncomingMessage
                                        0      0     18
       -> CoordinatorApp_SendP2PMessage
                                        0      0     36
       -> CoordinatorWriteUART          0      0     32
     CoordinatorApp_SendBroadcastMessage
                                        0      0     23
       -> AF_DataRequest                0      0     42
     CoordinatorApp_SendGroupMessage
                                        0      0     23
       -> AF_DataRequest                0      0     42
     CoordinatorApp_SendP2PMessage      0      0     39
       -> AF_DataRequest                0      0     42
     CoordinatorWriteUART               1      0     26
       -> HalUARTWrite                  0      0     20


   Segment part sizes:

     Function/Label                                 Bytes
     --------------                                 -----
     CoordinatorApp_HandleAfIncomingMessage
                                                     398
     ?Subroutine4                                      9
     ?Subroutine3                                     14
     ?Subroutine1                                     17
     ?Subroutine6                                      8
     ?Subroutine5                                      6
     CoordinatorApp_SendBroadcastMessage
                                                      60
     ?Subroutine0                                      8
     ??Subroutine7_0                                   5
     ?Subroutine2                                      9
     CoordinatorApp_SendGroupMessage
                                                      62
     CoordinatorApp_SendP2PMessage                    88
     CoordinatorWriteUART                            107
     ??CoordinatorApp_HandleAfIncomingMessage?relay    6
     ??CoordinatorApp_SendBroadcastMessage?relay       6
     ??CoordinatorApp_SendGroupMessage?relay           6
     ??CoordinatorApp_SendP2PMessage?relay             6
     ??CoordinatorWriteUART?relay                      6

 
 791 bytes in segment BANKED_CODE
  30 bytes in segment BANK_RELAYS
 
 821 bytes of CODE memory

Errors: none
Warnings: none
